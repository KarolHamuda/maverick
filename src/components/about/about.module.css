.container {
  max-width: 100%;
  height: 56.25rem;
  display: flex;
  align-items: center;
  justify-content: center;
  
  overflow: hidden;
}

.contentContainer {
  display: inline-flex;
  padding: 17.75rem 2.5rem 20.88rem 2.5rem;
  align-items: center;
  gap: 16.0625rem;
  
}

.aboutContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 2rem;
}

.aboutButtonContainer {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  flex-direction: row;
}

.aboutText {
  width: 15.8125rem;
  color: #FFFFFF;
  font-family: "TWK Lausanne Pan 300";
  font-size: 1rem;
  font-style: normal;
  font-weight: 300;
  line-height: 130%; /* 1.3rem */
}

.aboutButton {
  display: flex;
  border: 1px solid #FFF;
  border-radius: 6.25rem;
  max-width: 93px;
  height: 12px;
  padding: 6px 12px;
  justify-content: center;
  align-items: center;
  gap: 4px;
  text-decoration: none;
  color: #FFF;
  font-family: "TWK Lausanne Pan 300";
  font-size: 14px;
  font-style: normal;
  font-weight: 300;
  
}

.introduction {
  max-width: 55rem;
  color: #FFF;

  font-family: "TWK Lausanne Pan 300";
  font-size: 4rem;
  font-style: normal;
  font-weight: 300;
  line-height: 115%; /* 4.6rem */
  letter-spacing: -0.08rem;
}

.underline {
  position: relative; /* Ensure the parent has a relative position */
  text-decoration: none;
  padding-bottom: 6px;
  display: inline-block;
  color: #FFF; /* Set the text color to white */
}

.underline::after {
  content: ""; /* Add content property to ensure pseudo-element is generated */
  position: absolute; /* Position the pseudo-element absolutely within the parent */
  bottom: 0; /* Position it at the bottom */
  left: 0; /* Align it with the left edge of the parent */
  width: 100%;
  height: 2px;
  background-color: #FFF; /* Set the color of the underline */
  box-shadow: 0px -1px 1px rgba(255, 255, 255, 0.979); /* Increase contrast with a darker shadow */
  display: block;
}

.pictures {
  position: absolute;
  
  
  z-index: 999; /* Ensure it is on top of other elements */
}



.stacknet {
  border-radius: 2.5rem;
  background: url(../../images/about_3.png) lightgray 50%;
  background-size: cover;
  width: 18.5625rem;
  height: 13.125rem;
  border-radius: 0.625rem;
  position: absolute;
  margin-left: 47rem;
  margin-top: 8.3rem;
  
}

.poznan {
  background: url(../../images/about_1.png) lightgray 50%;
  background-size: cover;
  width: 13.125rem;
  height: 18.5625rem;
  border-radius: 0.625rem;
  position: absolute;
  margin-left: 12rem;
  margin-top: -5.3rem;
}

.sternum {
  background: url(../../images/about_2.png) lightgray 50%;
  background-size: cover;
  width: 18.5625rem;
  height: 13.125rem;
  border-radius: 0.625rem;
  position: absolute;
  
  margin-left: 63rem;
  margin-top: -15.3rem;
}

.trackable {
  background: url(../../images/about_4.png) lightgray 50%;
  background-size: cover;
  width: 13.125rem;
  height: 18.5625rem; 
  border-radius: 0.625rem;
  position: absolute;
  margin-left: 38rem;
  margin-top: -15.3rem;
}

.introduction.hovering {
  animation: fadeOut 0.5s forwards;
}

.aboutContainer.hovering {
  animation: fadeOut 0.5s forwards;
}

.aboutButtonContainer.hovering {
  animation: fadeOut 0.5s forwards;
}

.pictures.hovering {
  animation: fadeIn 0.5s forwards;
}

.introduction:not(.hovering) {
  animation: fadeIn 0.5s forwards;
}

.aboutContainer:not(.hovering) {
  animation: fadeIn 0.5s forwards;
}

.aboutButtonContainer:not(.hovering) {
  animation: fadeIn 0.3s forwards;
}

.pictures:not(.hovering) {
  animation: fadeOut 1s forwards;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0.1;
  }
  to {
    opacity: 1;
  }
}

.pointer {
  position: relative;
}

.arrow {
  transform: translateY(0px) translateZ(0) translateX(0px); /* Base state */
  transition: transform 0.3s ease;
}

.hiddenArrow {
  transform: translateX(-18px); /* Adjust the hidden position */
  transition: transform 0.3s ease;
   /* Make it invisible initially */
}


.aboutButtonContainer:hover .arrow {
  
  transform: translateY(0px) translateZ(0px) translateX(18px); /* Base state */
  transition: transform 0.3s ease;
  text-shadow: 0px 0px 0px rgb(255, 255, 255);
}

.aboutButtonContainer:hover .hiddenArrow {
  
  transform: translateY(0px) translateZ(0px) translateX(0px); /* Base state */
  transition: transform 0.3s ease;
  text-shadow: 0px 0px 0px rgb(255, 255, 255);
}


.aboutButtonContainer:hover .circle {
  fill: white;
}

